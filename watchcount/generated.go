// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package main

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type IncrementWatchCountInput struct {
	VideoID string `json:"VideoID"`
	UserID  string `json:"UserID"`
}

// GetVideoID returns IncrementWatchCountInput.VideoID, and is useful for accessing the field via an interface.
func (v *IncrementWatchCountInput) GetVideoID() string { return v.VideoID }

// GetUserID returns IncrementWatchCountInput.UserID, and is useful for accessing the field via an interface.
func (v *IncrementWatchCountInput) GetUserID() string { return v.UserID }

// __incrementWatchCountInput is used internally by genqlient
type __incrementWatchCountInput struct {
	Input IncrementWatchCountInput `json:"input"`
}

// GetInput returns __incrementWatchCountInput.Input, and is useful for accessing the field via an interface.
func (v *__incrementWatchCountInput) GetInput() IncrementWatchCountInput { return v.Input }

// getVideosResponse is returned by getVideos on success.
type getVideosResponse struct {
	Videos []getVideosVideosVideo `json:"videos"`
}

// GetVideos returns getVideosResponse.Videos, and is useful for accessing the field via an interface.
func (v *getVideosResponse) GetVideos() []getVideosVideosVideo { return v.Videos }

// getVideosVideosVideo includes the requested fields of the GraphQL type Video.
type getVideosVideosVideo struct {
	Id string `json:"id"`
}

// GetId returns getVideosVideosVideo.Id, and is useful for accessing the field via an interface.
func (v *getVideosVideosVideo) GetId() string { return v.Id }

// incrementWatchCountIncrementWatchCountIncrementWatchCountPayload includes the requested fields of the GraphQL type IncrementWatchCountPayload.
type incrementWatchCountIncrementWatchCountIncrementWatchCountPayload struct {
	WatchCount int `json:"watchCount"`
}

// GetWatchCount returns incrementWatchCountIncrementWatchCountIncrementWatchCountPayload.WatchCount, and is useful for accessing the field via an interface.
func (v *incrementWatchCountIncrementWatchCountIncrementWatchCountPayload) GetWatchCount() int {
	return v.WatchCount
}

// incrementWatchCountResponse is returned by incrementWatchCount on success.
type incrementWatchCountResponse struct {
	IncrementWatchCount incrementWatchCountIncrementWatchCountIncrementWatchCountPayload `json:"IncrementWatchCount"`
}

// GetIncrementWatchCount returns incrementWatchCountResponse.IncrementWatchCount, and is useful for accessing the field via an interface.
func (v *incrementWatchCountResponse) GetIncrementWatchCount() incrementWatchCountIncrementWatchCountIncrementWatchCountPayload {
	return v.IncrementWatchCount
}

// The query or mutation executed by getVideos.
const getVideos_Operation = `
query getVideos {
	videos {
		id
	}
}
`

func getVideos(
	ctx_ context.Context,
	client_ graphql.Client,
) (*getVideosResponse, error) {
	req_ := &graphql.Request{
		OpName: "getVideos",
		Query:  getVideos_Operation,
	}
	var err_ error

	var data_ getVideosResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by incrementWatchCount.
const incrementWatchCount_Operation = `
mutation incrementWatchCount ($input: IncrementWatchCountInput!) {
	IncrementWatchCount(input: $input) {
		watchCount
	}
}
`

func incrementWatchCount(
	ctx_ context.Context,
	client_ graphql.Client,
	input IncrementWatchCountInput,
) (*incrementWatchCountResponse, error) {
	req_ := &graphql.Request{
		OpName: "incrementWatchCount",
		Query:  incrementWatchCount_Operation,
		Variables: &__incrementWatchCountInput{
			Input: input,
		},
	}
	var err_ error

	var data_ incrementWatchCountResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
